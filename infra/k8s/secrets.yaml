# ⚠️ SECURITY WARNING: DO NOT COMMIT ACTUAL SECRETS TO GIT
# This is a template file showing the structure of secrets needed.
# Actual secrets should be managed using one of these methods:
# 1. AWS Secrets Manager + External Secrets Operator
# 2. kubectl create secret (manual, not in git)
# 3. Sealed Secrets (encrypts secrets for git)
# 4. CI/CD pipeline secrets injection

# To create secrets manually (NOT COMMITTED TO GIT):
# kubectl create secret generic db-secrets -n cs3219 \
#   --from-literal=question-db-user=questionuser \
#   --from-literal=question-db-password=$(openssl rand -base64 32) \
#   --from-literal=question-db-name=questiondb \
#   --from-literal=user-db-user=user \
#   --from-literal=user-db-password=$(openssl rand -base64 32) \
#   --from-literal=user-db-name=userdb \
#   --from-literal=redis-password=""

# kubectl create secret generic app-secrets -n cs3219 \
#   --from-literal=jwt-secret=$(openssl rand -base64 64) \
#   --from-literal=google-client-id=YOUR_GOOGLE_CLIENT_ID \
#   --from-literal=google-client-secret=YOUR_GOOGLE_CLIENT_SECRET \
#   --from-literal=google-redirect-uri=https://your-domain.com/api/v1/auth/google/callback

---
# Template structure (for reference only):
apiVersion: v1
kind: Secret
metadata:
  name: db-secrets
  namespace: cs3219
type: Opaque
stringData:
  question-db-user: ""
  question-db-password: ""
  question-db-name: ""
  user-db-user: ""
  user-db-password: ""
  user-db-name: ""
  collab-db-user: ""
  collab-db-password: ""
  collab-db-name: ""
  redis-password: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: cs3219
type: Opaque
stringData:
  jwt-secret: ""
  # RSA keypair used by User Service to sign (private) and publish (public) JWKS
  rsa-private-key: ""
  rsa-public-key: ""
  # Public JWKS URI that other services (and user service itself) will use
  jwks-uri: ""
  google-client-id: ""
  google-client-secret: ""
  google-redirect-uri: ""
  # Frontend URLs for post-auth redirects
  web-callback-url: ""
  web-error-url: ""
