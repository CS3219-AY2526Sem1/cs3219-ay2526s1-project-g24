apiVersion: apps/v1
kind: Deployment
metadata:
  name: collab-service
  namespace: cs3219
  labels:
    app: collab-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: collab-service
  template:
    metadata:
      labels:
        app: collab-service
    spec:
      serviceAccountName: ghcr-pull
      initContainers:
      - name: prisma-migrate
        image: ghcr.io/cs3219-ay2526sem1/cs3219-g24-collab-service:latest
        command: 
          - sh
          - -c
          - |
            cd apps/collab-service &&
            npx prisma migrate deploy
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: collab-db-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: collab-db-password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: collab-db-name
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@collab-db:5432/$(POSTGRES_DB)"
      containers:
      - name: collab-service
        image: ghcr.io/cs3219-ay2526sem1/cs3219-g24-collab-service:latest
        ports:
        - containerPort: 3003
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3003"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: collab-db-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: collab-db-password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: collab-db-name
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@collab-db:5432/$(POSTGRES_DB)"
        - name: REDIS_HOST
          value: "matching-redis"
        - name: REDIS_PORT
          value: "6379"
        - name: USER_SERVICE_URL
          value: "http://user-service:8000"
        - name: QUESTION_SERVICE_URL
          value: "http://question-service:8000"
        - name: JWT_ALGORITHM
          value: "RS256"
        - name: ENABLE_MOCK_AUTH
          value: "false"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: jwt-secret
        - name: CORS_ORIGINS
          value: "https://cs3219.leyew.dev,http://localhost:3000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: collab-service
  namespace: cs3219
  labels:
    app: collab-service
spec:
  type: ClusterIP
  ports:
  - port: 3003
    targetPort: 3003
    protocol: TCP
    name: http
  selector:
    app: collab-service